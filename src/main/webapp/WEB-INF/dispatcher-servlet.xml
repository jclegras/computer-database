<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

	<context:component-scan base-package="com.excilys.controller" />

	<mvc:resources mapping="/resources/**" location="/public-web-resources/" />
	<mvc:annotation-driven />

	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver"
		p:viewClass="org.springframework.web.servlet.view.JstlView" 
		p:prefix="/WEB-INF/views/"
		p:suffix=".jsp" />

	<!-- Uses a locale attribute in the user's session Checks the accept-language 
		header in the client HTTP request -->
	<bean id="sessionLocaleResolver"
		class="org.springframework.web.servlet.i18n.SessionLocaleResolver"
		p:defaultLocale="en" />

	<!-- Detects a parameter in the request and change the locale -->
	<mvc:interceptors>
		<bean id="localeChangeInterceptor"
			class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"
			p:paramName="language" />
	</mvc:interceptors>

	<!-- This locale resolver inspects a Cookie that might exist on the client 
		to see if a Locale or TimeZone is specified -->
	<!-- in seconds. If set to -1, the cookie is not persisted (deleted when 
		browser shuts down) -->
	<bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.CookieLocaleResolver"
		p:defaultLocale="en"
		p:cookieName="language"
		p:cookieMaxAge="100000" />

	<!-- Allows for reading files from any Spring resource location (not just 
		from the classpath) and supports hot reloading of bundle property files -->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource"
		p:basename="classpath:messages"
		p:defaultEncoding="UTF-8" />
</beans>      