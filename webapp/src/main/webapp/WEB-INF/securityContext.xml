<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns="http://www.springframework.org/schema/security"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
		   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		   http://www.springframework.org/schema/security
		   http://www.springframework.org/schema/security/spring-security.xsd">

    <!-- Apply a proxy for a standard Servlet Filter for all requests -->
    <beans:bean id="springSecurityFilterChain" class="org.springframework.security.web.FilterChainProxy">
        <filter-chain-map>
            <filter-chain pattern="/**" filters="springSecurityFilterChain"/>
        </filter-chain-map>
    </beans:bean>

    <!-- Container element for HTTP security configuration -->
    <http use-expressions="true">
        <access-denied-handler error-page="/403" />
        <intercept-url pattern="/login**" access="permitAll"/>
        <intercept-url pattern="/resources/**" access="permitAll"/>
        <intercept-url pattern="/editComputer**" access="hasRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/addComputer**" access="hasRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/delete**" access="hasRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/**" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')"/>
        <form-login login-page="/loginPage"
                    username-parameter="username"
                    password-parameter="password"
                    default-target-url="/dashboard"
                    authentication-failure-url="/loginPage?error"
                    always-use-default-target="true"/>
        <logout logout-url="/logout"
                delete-cookies="JSESSIONID"
                logout-success-url="/loginPage?logout"/>
        <!-- for protection against CSRF -->
        <csrf/>
    </http>

    <!-- Authentification manager with BCrypt and default spring's user UserDetailsServiceRetrieves -->
    <authentication-manager>
        <authentication-provider user-service-ref="userDetailsService">
            <password-encoder ref="bcryptEncoder"/>
        </authentication-provider>
    </authentication-manager>

    <!-- Implementation of PasswordEncoder that uses the BCrypt strong hashing function -->
    <beans:bean id="bcryptEncoder"
                class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

    <!-- Retrieves the user details (username, password, enabled flag, and authorities)
            from a database using JDBC queries -->
    <beans:bean id="userDetailsService"
                class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">
        <beans:property name="dataSource" ref="dataSource"/>
    </beans:bean>
</beans:beans>